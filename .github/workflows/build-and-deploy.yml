name: Publish to GCR

on:
  push:
    branches:
      - staging
      - production
      - master
env:
  GCR_PROJECT_ID: livad-311922
  GCR_URL: eu.gcr.io
  GCR_IMAGE_NAME: livad-admin-api
  GCR_IMAGE_NAME_TEST: livad-admin-api-test
  GCR_IMAGE_TAG: ${{ github.sha }}
  GKE_CLUSTER: livad-de-prod-kubernetes-cluster
  GKE_ZONE: europe-west3
  GKE_ENV: ${GITHUB_REF##*/}
  GKE_ENVv: production
  
jobs:
  Deploy:
    runs-on: ubuntu-latest 
    permissions: 
      contents: read
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: gokhannihal/demo-devops
          path: './devops'
          
      - name: Login to GCR
        uses: google-github-actions/setup-gcloud@v0.3.0 
        with:
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }} 
          project_id: ${{ env.GCR_PROJECT_ID }} 
          export_default_credentials: true

      - if: github.ref == 'refs/heads/master'   
        name: Build Docker Image
        id: build-image-staging
        run: docker build -t $GCR_URL/$GCR_PROJECT_ID/$GCR_IMAGE_NAME:$GCR_IMAGE_TAG . 
        
      - name: Configure Docker Client
        run:  |-
          gcloud auth configure-docker --quiet 

      - if: github.ref == 'refs/heads/master'  
        name: Push Docker Image to Container Registry GCR
        run: |-
          docker push $GCR_URL/$GCR_PROJECT_ID/$GCR_IMAGE_NAME:$GCR_IMAGE_TAG 

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GCLOUD_SA_KEY }}  
      
      - name: Deploy
        run: |-
          echo $GKE_ENV
          helm install $GKE_PROJECT -f devops/$GKE_ENVv/demo-app.yaml --set deploy.tag=GCR_IMAGE_TAG devops/. --wait 
          kubectl rollout status deployment/livad-admin-api
